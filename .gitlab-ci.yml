# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

before_script:
 - apt-get update --yes && apt-get upgrade --yes
 - apt-get install --yes cmake
 - apt-get install ninja-build
 - apt-get install doxygen --assume-yes

# Installing OpenCV from source
 - apt-get install build-essential cmake git pkg-config libgtk-3-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr libatlas-base-dev python3-dev python3-numpy \
    libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev \
    libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

 - mkdir ~/opencv_build && cd ~/opencv_build
 - git clone https://github.com/opencv/opencv.git
 - git clone https://github.com/opencv/opencv_contrib.git

 - cd ~/opencv_build/opencv
 - mkdir -p build && cd build

 - cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=ON \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D OPENCV_GENERATE_PKGCONFIG=ON \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..

 - make -j8
 - make install

 - pkg-config --modversion opencv4

stages:
  - build

build-job:
  tags:
    - alpine-docker
  stage: build
  artifacts:
    paths:
    - BUILD/Documentation/
  script:
    - mkdir BUILD
    - cd BUILD
    - cmake -G "Ninja" ../ArcStreamLabs
    - ninja
    - ./tests
    - cmake --build . --target BuildDoc

